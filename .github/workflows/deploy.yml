name: Build Static Web
on:
  push:
    branches:
      - main

jobs:
  dependencies:
    name: Build dependencies
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Create global variables
        id: version
        run: echo "::set-output name=version::$(git rev-parse --short HEAD)"

  release:
    name: "Create Github tag/release"
    runs-on: ubuntu-latest
    needs: dependencies
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Github release (${{ needs.dependencies.outputs.version }})
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}-${{ needs.dependencies.outputs.version }}
          release_name: Version ${{ github.run_number }} (${{ needs.dependencies.outputs.version }})
          draft: false
          prerelease: false
  test:
    runs-on: ubuntu-latest
    container:
      image: node:16
    needs: [dependencies, release]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Run Build
        run: npm run build

      - name: Zip
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r out.zip out

      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: next-build
          path: out.zip

      - name: Upload release assets windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: /
          asset_name: out.zip
          asset_content_type: application/zip
